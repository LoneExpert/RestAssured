What is RestAssured?
-RestAssured is a Java-based library designed to simplify REST API automation testing.
-Instead of testing APIs manually with tools like Postman, RestAssured allows you to write automated scripts that:
  ->Send HTTP requests → GET, POST, PUT, DELETE, PATCH
  ->Validate responses → Status codes, headers, body content, response time
  ->Handle authentication → Basic Auth, OAuth, JWT tokens
  ->Run tests repeatedly → Perfect for CI/CD pipelines

Why RestAssured Matters in QA Automation?
-Fluent, human-readable syntax → easy to learn & implement
-Integrates with TestNG / JUnit for structured test execution
-Supports JSON & XML response validation
-Compatible with Maven/Gradle build tools
-CI/CD Ready → Works with Jenkins, GitHub Actions & pipelines
-Enhanced Reporting → Combine with Allure / Extent reports for professional reports

# With RestAssured, you can ensure your APIs are reliable, efficient, and production-ready with automated testing.

Quick Example

- Say we want to test an API:
### GET https://jsonplaceholder.typicode.com/users/1

- Using Postman, we can check manually.
- But with RestAssured, we automate it:

/*
import io.restassured.RestAssured;
import org.testng.annotations.Test;
import static io.restassured.RestAssured.*;
import static org.hamcrest.Matchers.*;

public class ExampleApiTest {
    @Test
    public void testUserApi() {
        RestAssured.baseURI = "https://jsonplaceholder.typicode.com";

        given()
        .when()
            .get("/users/1")
        .then()
            .statusCode(200)   // checks HTTP status
            .body("id", equalTo(1))   // validates response JSON
            .body("name", notNullValue())  // ensures name is present
            .log().all();  // prints full response
    }
}
*/

Output: It will test automatically if User 1 exists and the API returns correct JSON.
